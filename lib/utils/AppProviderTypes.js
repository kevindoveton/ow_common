"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.makeSuccess = makeSuccess;
exports.makeError = makeError;
exports.isError = isError;
exports.unsafeUnwrap = unsafeUnwrap;
exports.resultsHasError = resultsHasError;
exports.ResultType = void 0;
var ResultType;
exports.ResultType = ResultType;

(function (ResultType) {
  ResultType["ERROR"] = "ERROR";
  ResultType["SUCCESS"] = "SUCCESS";
})(ResultType || (exports.ResultType = ResultType = {}));

function makeSuccess(result) {
  return {
    type: ResultType.SUCCESS,
    result: result
  };
}

function makeError(message) {
  return {
    type: ResultType.ERROR,
    message: message
  };
}

function isError(result) {
  if (result.type === ResultType.ERROR) {
    return true;
  }

  return false;
}
/**
 * unsafeUnwrap
 * 
 * Unwrap a result unsafelty. Similar to Rust
 * Throws error if result.type === ResultError
 */


function unsafeUnwrap(result) {
  if (result.type === ResultType.ERROR) {
    throw new Error(result.message);
  }

  return result.result;
}
/**
 * Reduces a list of SomeResults and returns if any of them contain an error
 */


function resultsHasError(results) {
  return results.reduce(function (acc, curr) {
    if (curr.type === ResultType.ERROR) {
      return true;
    }

    return acc;
  }, false);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9BcHBQcm92aWRlclR5cGVzLnRzIl0sIm5hbWVzIjpbIlJlc3VsdFR5cGUiLCJtYWtlU3VjY2VzcyIsInJlc3VsdCIsInR5cGUiLCJTVUNDRVNTIiwibWFrZUVycm9yIiwibWVzc2FnZSIsIkVSUk9SIiwiaXNFcnJvciIsInVuc2FmZVVud3JhcCIsIkVycm9yIiwicmVzdWx0c0hhc0Vycm9yIiwicmVzdWx0cyIsInJlZHVjZSIsImFjYyIsImN1cnIiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0lBY1lBLFU7OztXQUFBQSxVO0FBQUFBLEVBQUFBLFU7QUFBQUEsRUFBQUEsVTtHQUFBQSxVLDBCQUFBQSxVOztBQUtMLFNBQVNDLFdBQVQsQ0FBd0JDLE1BQXhCLEVBQWtEO0FBQ3ZELFNBQU87QUFDTEMsSUFBQUEsSUFBSSxFQUFFSCxVQUFVLENBQUNJLE9BRFo7QUFFTEYsSUFBQUEsTUFBTSxFQUFOQTtBQUZLLEdBQVA7QUFJRDs7QUFFTSxTQUFTRyxTQUFULENBQXNCQyxPQUF0QixFQUFzRDtBQUMzRCxTQUFPO0FBQ0xILElBQUFBLElBQUksRUFBRUgsVUFBVSxDQUFDTyxLQURaO0FBRUxELElBQUFBLE9BQU8sRUFBUEE7QUFGSyxHQUFQO0FBSUQ7O0FBRU0sU0FBU0UsT0FBVCxDQUFpQk4sTUFBakIsRUFBMEM7QUFDL0MsTUFBSUEsTUFBTSxDQUFDQyxJQUFQLEtBQWdCSCxVQUFVLENBQUNPLEtBQS9CLEVBQXNDO0FBQ3BDLFdBQU8sSUFBUDtBQUNEOztBQUVELFNBQU8sS0FBUDtBQUNEO0FBR0Q7Ozs7Ozs7O0FBTU8sU0FBU0UsWUFBVCxDQUF5QlAsTUFBekIsRUFBbUQ7QUFDeEQsTUFBSUEsTUFBTSxDQUFDQyxJQUFQLEtBQWdCSCxVQUFVLENBQUNPLEtBQS9CLEVBQXNDO0FBQ3BDLFVBQU0sSUFBSUcsS0FBSixDQUFVUixNQUFNLENBQUNJLE9BQWpCLENBQU47QUFDRDs7QUFFRCxTQUFPSixNQUFNLENBQUNBLE1BQWQ7QUFDRDtBQUdEOzs7OztBQUdPLFNBQVNTLGVBQVQsQ0FBeUJDLE9BQXpCLEVBQW1FO0FBQ3hFLFNBQU9BLE9BQU8sQ0FBQ0MsTUFBUixDQUFlLFVBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFlO0FBQ25DLFFBQUlBLElBQUksQ0FBQ1osSUFBTCxLQUFjSCxVQUFVLENBQUNPLEtBQTdCLEVBQW9DO0FBQ2xDLGFBQU8sSUFBUDtBQUNEOztBQUNELFdBQU9PLEdBQVA7QUFDRCxHQUxNLEVBS0osS0FMSSxDQUFQO0FBTUQiLCJzb3VyY2VzQ29udGVudCI6WyJcbmV4cG9ydCB0eXBlIFNvbWVSZXN1bHQ8VD4gPSBFcnJvclJlc3VsdCB8IFN1Y2Nlc3NSZXN1bHQ8VD47XG5cbmV4cG9ydCB0eXBlIFN1Y2Nlc3NSZXN1bHQ8VD4gPSB7XG4gIHJlc3VsdDogVCxcbiAgdHlwZTogUmVzdWx0VHlwZS5TVUNDRVNTLFxufVxuXG5leHBvcnQgdHlwZSBFcnJvclJlc3VsdCA9IHtcbiAgbWVzc2FnZTogc3RyaW5nLFxuICB0eXBlOiBSZXN1bHRUeXBlLkVSUk9SLFxufVxuXG5cbmV4cG9ydCBlbnVtIFJlc3VsdFR5cGUge1xuICBFUlJPUiA9ICdFUlJPUicsXG4gIFNVQ0NFU1MgPSAnU1VDQ0VTUycsXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBtYWtlU3VjY2VzczxUPihyZXN1bHQ6IFQpOiBTb21lUmVzdWx0PFQ+IHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBSZXN1bHRUeXBlLlNVQ0NFU1MsXG4gICAgcmVzdWx0LFxuICB9O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gbWFrZUVycm9yPFQ+KG1lc3NhZ2U6IHN0cmluZyk6IFNvbWVSZXN1bHQ8VD4ge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFJlc3VsdFR5cGUuRVJST1IsXG4gICAgbWVzc2FnZSxcbiAgfTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGlzRXJyb3IocmVzdWx0OiBTb21lUmVzdWx0PGFueT4pIHtcbiAgaWYgKHJlc3VsdC50eXBlID09PSBSZXN1bHRUeXBlLkVSUk9SKSB7XG4gICAgcmV0dXJuIHRydWU7XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cblxuLyoqXG4gKiB1bnNhZmVVbndyYXBcbiAqIFxuICogVW53cmFwIGEgcmVzdWx0IHVuc2FmZWx0eS4gU2ltaWxhciB0byBSdXN0XG4gKiBUaHJvd3MgZXJyb3IgaWYgcmVzdWx0LnR5cGUgPT09IFJlc3VsdEVycm9yXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1bnNhZmVVbndyYXA8VD4ocmVzdWx0OiBTb21lUmVzdWx0PFQ+KTogVCB7XG4gIGlmIChyZXN1bHQudHlwZSA9PT0gUmVzdWx0VHlwZS5FUlJPUikge1xuICAgIHRocm93IG5ldyBFcnJvcihyZXN1bHQubWVzc2FnZSk7XG4gIH1cblxuICByZXR1cm4gcmVzdWx0LnJlc3VsdDtcbn1cblxuXG4vKipcbiAqIFJlZHVjZXMgYSBsaXN0IG9mIFNvbWVSZXN1bHRzIGFuZCByZXR1cm5zIGlmIGFueSBvZiB0aGVtIGNvbnRhaW4gYW4gZXJyb3JcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHJlc3VsdHNIYXNFcnJvcihyZXN1bHRzOiBBcnJheTxTb21lUmVzdWx0PGFueT4+KTogYm9vbGVhbiB7XG4gIHJldHVybiByZXN1bHRzLnJlZHVjZSgoYWNjLCBjdXJyKSA9PiB7XG4gICAgaWYgKGN1cnIudHlwZSA9PT0gUmVzdWx0VHlwZS5FUlJPUikge1xuICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuICAgIHJldHVybiBhY2M7XG4gIH0sIGZhbHNlKTtcbn0iXX0=
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DefaultPendingResource = exports.DefaultMyWellResource = exports.DefaultResource = exports.ResourceType = void 0;

var _ResourceStationType = _interopRequireDefault(require("../enums/ResourceStationType"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var ResourceType;
exports.ResourceType = ResourceType;

(function (ResourceType) {
  ResourceType["Any"] = "Any";
  ResourceType["MyWell"] = "MyWell";
  ResourceType["GGMN"] = "GGMN";
})(ResourceType || (exports.ResourceType = ResourceType = {}));

/**
 * Default Types
 */
var DefaultResource = {
  type: ResourceType.Any,
  id: "",
  coords: {
    latitude: 1,
    longitude: 1
  },
  timeseries: {} //TODO: figure out timeseries...

};
exports.DefaultResource = DefaultResource;
var DefaultMyWellResource = {
  id: "00001",
  coords: {
    latitude: 10,
    longitude: 10
  },
  timeseries: {},
  //TODO: fix
  type: ResourceType.MyWell,
  legacyId: "12345",
  owner: {
    name: "Lewis ji"
  },
  resourceType: _ResourceStationType.default.well,
  lastValue: 0,
  lastReadingDatetime: new Date(),
  groups: {
    pincode: "313603",
    country: "IN"
  }
};
exports.DefaultMyWellResource = DefaultMyWellResource;
var DefaultPendingResource = {
  pending: true,
  pendingId: "00001",
  coords: {
    latitude: 1,
    longitude: 1
  },
  timeseries: {}
};
exports.DefaultPendingResource = DefaultPendingResource;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9tb2RlbC9SZXNvdXJjZS50cyJdLCJuYW1lcyI6WyJSZXNvdXJjZVR5cGUiLCJEZWZhdWx0UmVzb3VyY2UiLCJ0eXBlIiwiQW55IiwiaWQiLCJjb29yZHMiLCJsYXRpdHVkZSIsImxvbmdpdHVkZSIsInRpbWVzZXJpZXMiLCJEZWZhdWx0TXlXZWxsUmVzb3VyY2UiLCJNeVdlbGwiLCJsZWdhY3lJZCIsIm93bmVyIiwibmFtZSIsInJlc291cmNlVHlwZSIsIlJlc291cmNlU3RhdGlvblR5cGUiLCJ3ZWxsIiwibGFzdFZhbHVlIiwibGFzdFJlYWRpbmdEYXRldGltZSIsIkRhdGUiLCJncm91cHMiLCJwaW5jb2RlIiwiY291bnRyeSIsIkRlZmF1bHRQZW5kaW5nUmVzb3VyY2UiLCJwZW5kaW5nIiwicGVuZGluZ0lkIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7SUFHWUEsWTs7O1dBQUFBLFk7QUFBQUEsRUFBQUEsWTtBQUFBQSxFQUFBQSxZO0FBQUFBLEVBQUFBLFk7R0FBQUEsWSw0QkFBQUEsWTs7QUE0RFo7OztBQUdPLElBQU1DLGVBQXlCLEdBQUc7QUFDdkNDLEVBQUFBLElBQUksRUFBRUYsWUFBWSxDQUFDRyxHQURvQjtBQUV2Q0MsRUFBQUEsRUFBRSxFQUFFLEVBRm1DO0FBR3ZDQyxFQUFBQSxNQUFNLEVBQUU7QUFBRUMsSUFBQUEsUUFBUSxFQUFFLENBQVo7QUFBZUMsSUFBQUEsU0FBUyxFQUFFO0FBQTFCLEdBSCtCO0FBSXZDQyxFQUFBQSxVQUFVLEVBQUUsRUFKMkIsQ0FJdkI7O0FBSnVCLENBQWxDOztBQVFBLElBQU1DLHFCQUFxQyxHQUFHO0FBQ25ETCxFQUFBQSxFQUFFLEVBQUUsT0FEK0M7QUFFbkRDLEVBQUFBLE1BQU0sRUFBRTtBQUFFQyxJQUFBQSxRQUFRLEVBQUUsRUFBWjtBQUFnQkMsSUFBQUEsU0FBUyxFQUFFO0FBQTNCLEdBRjJDO0FBR25EQyxFQUFBQSxVQUFVLEVBQUUsRUFIdUM7QUFHbkM7QUFDaEJOLEVBQUFBLElBQUksRUFBRUYsWUFBWSxDQUFDVSxNQUpnQztBQUtuREMsRUFBQUEsUUFBUSxFQUFFLE9BTHlDO0FBTW5EQyxFQUFBQSxLQUFLLEVBQUU7QUFBRUMsSUFBQUEsSUFBSSxFQUFFO0FBQVIsR0FONEM7QUFPbkRDLEVBQUFBLFlBQVksRUFBRUMsNkJBQW9CQyxJQVBpQjtBQVFuREMsRUFBQUEsU0FBUyxFQUFFLENBUndDO0FBU25EQyxFQUFBQSxtQkFBbUIsRUFBRSxJQUFJQyxJQUFKLEVBVDhCO0FBVW5EQyxFQUFBQSxNQUFNLEVBQUU7QUFDTkMsSUFBQUEsT0FBTyxFQUFFLFFBREg7QUFFTkMsSUFBQUEsT0FBTyxFQUFFO0FBRkg7QUFWMkMsQ0FBOUM7O0FBZ0JBLElBQU1DLHNCQUF1QyxHQUFHO0FBQ3JEQyxFQUFBQSxPQUFPLEVBQUUsSUFENEM7QUFHckRDLEVBQUFBLFNBQVMsRUFBRSxPQUgwQztBQUlyRHBCLEVBQUFBLE1BQU0sRUFBRTtBQUFFQyxJQUFBQSxRQUFRLEVBQUUsQ0FBWjtBQUFlQyxJQUFBQSxTQUFTLEVBQUU7QUFBMUIsR0FKNkM7QUFLckRDLEVBQUFBLFVBQVUsRUFBRTtBQUx5QyxDQUFoRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZXNvdXJjZVN0YXRpb25UeXBlIGZyb20gXCIuLi9lbnVtcy9SZXNvdXJjZVN0YXRpb25UeXBlXCI7XG5pbXBvcnQgeyBEaWN0VHlwZSB9IGZyb20gXCIuLi91dGlscy9EaWN0VHlwZVwiO1xuXG5leHBvcnQgZW51bSBSZXNvdXJjZVR5cGUge1xuICBBbnkgPSAnQW55JyxcbiAgTXlXZWxsID0gJ015V2VsbCcsXG4gIEdHTU4gPSAnR0dNTicsXG59XG5cbmV4cG9ydCB0eXBlIFJlc291cmNlID0gQmFzZVJlc291cmNlIHwgTXlXZWxsUmVzb3VyY2UgfCBHR01OUmVzb3VyY2U7XG5cbmV4cG9ydCB0eXBlIEJhc2VSZXNvdXJjZSA9IHtcbiAgdHlwZTogUmVzb3VyY2VUeXBlO1xuXG4gIGlkOiBzdHJpbmcsXG4gIGNvb3JkczogeyBsYXRpdHVkZTogbnVtYmVyLCBsb25naXR1ZGU6IG51bWJlcn0sXG4gIHRpbWVzZXJpZXM6IGFueSwgLy9UT0RPOiBmaWd1cmUgb3V0IHRpbWVzZXJpZXMuLi5cbn1cblxudHlwZSBNeVdlbGxSZXNvdXJjZVByb3BzID0ge1xuICB0eXBlOiBSZXNvdXJjZVR5cGUuTXlXZWxsLFxuICBsZWdhY3lJZDogc3RyaW5nLFxuICBvd25lcjoge25hbWU6IHN0cmluZ30sXG4gIHJlc291cmNlVHlwZTogUmVzb3VyY2VTdGF0aW9uVHlwZSxcbiAgbGFzdFZhbHVlOiBudW1iZXIsXG4gIGxhc3RSZWFkaW5nRGF0ZXRpbWU6IERhdGUsXG4gIGdyb3VwczogRGljdFR5cGU8c3RyaW5nPixcbn1cblxudHlwZSBHR01OUmVzb3VyY2VQcm9wcyA9IHtcbiAgdHlwZTogUmVzb3VyY2VUeXBlLkdHTU4sXG5cbiAgZGVzY3JpcHRpb246IHN0cmluZyxcbiAgdGl0bGU6IHN0cmluZyxcbiAgbmFtZTogc3RyaW5nLFxuICBncm91bmR3YXRlclN0YXRpb25JZDogc3RyaW5nLFxuICB3YXRlckNvbHVtbkhlaWdodDogbnVtYmVyLFxufVxuXG5cbmV4cG9ydCB0eXBlIE15V2VsbFJlc291cmNlID0gQmFzZVJlc291cmNlICYgTXlXZWxsUmVzb3VyY2VQcm9wcztcbmV4cG9ydCB0eXBlIEdHTU5SZXNvdXJjZSA9IEJhc2VSZXNvdXJjZSAmIEdHTU5SZXNvdXJjZVByb3BzO1xuXG4vKipcbiAqIFBlbmRpbmcgVHlwZXNcbiAqXG4gKiBSZXByZXNlbnRzIGFuIGluY29tcGxldGUgb3IgcGVuZGluZyB2ZXJzaW9uIG9mIFJlc291cmNlXG4gKi9cbmV4cG9ydCB0eXBlIFBlbmRpbmdSZXNvdXJjZSA9IEJhc2VQZW5kaW5nUmVzb3VyY2UgfCBQZW5kaW5nTXlXZWxsUmVzb3VyY2UgfCBQZW5kaW5nR0dNTlJlc291cmNlO1xuXG5leHBvcnQgdHlwZSBCYXNlUGVuZGluZ1Jlc291cmNlID0ge1xuICBwZW5kaW5nOiB0cnVlLFxuXG4gIHBlbmRpbmdJZDogc3RyaW5nLFxuICBjb29yZHM6IHsgbGF0aXR1ZGU6IG51bWJlciwgbG9uZ2l0dWRlOiBudW1iZXIgfSxcbiAgdGltZXNlcmllczogYW55LFxufVxuXG5leHBvcnQgdHlwZSBQZW5kaW5nTXlXZWxsUmVzb3VyY2UgPSBCYXNlUGVuZGluZ1Jlc291cmNlICYgTXlXZWxsUmVzb3VyY2VQcm9wc1xuZXhwb3J0IHR5cGUgUGVuZGluZ0dHTU5SZXNvdXJjZSA9IEJhc2VQZW5kaW5nUmVzb3VyY2UgJiBHR01OUmVzb3VyY2VQcm9wc1xuXG5cblxuLyoqXG4gKiBEZWZhdWx0IFR5cGVzXG4gKi9cbmV4cG9ydCBjb25zdCBEZWZhdWx0UmVzb3VyY2U6IFJlc291cmNlID0ge1xuICB0eXBlOiBSZXNvdXJjZVR5cGUuQW55LFxuICBpZDogXCJcIixcbiAgY29vcmRzOiB7IGxhdGl0dWRlOiAxLCBsb25naXR1ZGU6IDEgfSxcbiAgdGltZXNlcmllczoge30sIC8vVE9ETzogZmlndXJlIG91dCB0aW1lc2VyaWVzLi4uXG59O1xuXG5cbmV4cG9ydCBjb25zdCBEZWZhdWx0TXlXZWxsUmVzb3VyY2U6IE15V2VsbFJlc291cmNlID0ge1xuICBpZDogXCIwMDAwMVwiLFxuICBjb29yZHM6IHsgbGF0aXR1ZGU6IDEwLCBsb25naXR1ZGU6IDEwIH0sXG4gIHRpbWVzZXJpZXM6IHt9LCAvL1RPRE86IGZpeFxuICB0eXBlOiBSZXNvdXJjZVR5cGUuTXlXZWxsLFxuICBsZWdhY3lJZDogXCIxMjM0NVwiLFxuICBvd25lcjogeyBuYW1lOiBcIkxld2lzIGppXCIgfSxcbiAgcmVzb3VyY2VUeXBlOiBSZXNvdXJjZVN0YXRpb25UeXBlLndlbGwsXG4gIGxhc3RWYWx1ZTogMCxcbiAgbGFzdFJlYWRpbmdEYXRldGltZTogbmV3IERhdGUoKSxcbiAgZ3JvdXBzOiB7XG4gICAgcGluY29kZTogXCIzMTM2MDNcIixcbiAgICBjb3VudHJ5OiBcIklOXCJcbiAgfVxufVxuXG5leHBvcnQgY29uc3QgRGVmYXVsdFBlbmRpbmdSZXNvdXJjZTogUGVuZGluZ1Jlc291cmNlID0ge1xuICBwZW5kaW5nOiB0cnVlLFxuXG4gIHBlbmRpbmdJZDogXCIwMDAwMVwiLFxuICBjb29yZHM6IHsgbGF0aXR1ZGU6IDEsIGxvbmdpdHVkZTogMSB9LFxuICB0aW1lc2VyaWVzOiB7fSxcbn0iXX0=